@page "/employees"
@using EM.Application.Services.Abstract
@using EM.Core.Models
@using EM.Application.Abstract.Services
@inject IDataProvider<Employee> DataProvider
@inject IBonusService BonusService;
@attribute [StreamRendering]

<PageTitle>Employees</PageTitle>

<h1>Employees</h1>

<p>This component demonstrates showing data.</p>

@if (_employees == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Personal Id Number</th>
            <th>Salary</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var employee in _employees)
        {
            <tr>
                <td>@employee.Id</td>
                <td>@employee.PersonalIdNumber</td>
                <td>@employee.Salary</td>
                <td>
                    <div>
                        <span>Give Bonus</span>
                        <button @onclick="() => GiveBonus(employee)">Perform</button>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Employee[]? _employees;

    protected override async Task OnInitializedAsync()
    {
        var e = await DataProvider.GetAllAsync();
        _employees = e.ToArray();
    }

    private void GiveBonus(Employee employee)
    {
        BonusService.GiveBonus(employee, 0.2m);
        
        if (_employees != null) 
            DataProvider.SaveAllAsync(_employees);
    }
}